name: Lint

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  path-check:
    name: Path Check
    runs-on: ubuntu-latest
    permissions:
      read-all
    outputs:
      eslint: ${{ steps.changes.outputs.eslint }}
      pylint: ${{ steps.changes.outputs.pylint }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
      id: changes
      with:
        filters: |
          eslint:
            - 'frontend/**'
          pylint:
            - 'backend/**'
  run-linters:
    name: Run Linters
    runs-on: ubuntu-latest
    needs: path-check
    permissions:
      contents: read
      issues: write
      pull-requests: write
      checks: write
    steps:
      - name: Check out Git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        if: ${{ needs.path-check.outputs.eslint == 'true' }}
        with:
          node-version: 20

      - name: Install Node.js dependencies
        if: ${{ needs.path-check.outputs.eslint == 'true' }}
        working-directory: ./frontend
        run: npm ci

      - name: Eslint
        if: ${{ needs.path-check.outputs.eslint == 'true' }}
        working-directory: ./frontend
        run: npm run lint
  
      - name: Set up Python version
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5
        if: ${{ needs.path-check.outputs.pylint == 'true' }}
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        if: ${{ needs.path-check.outputs.pylint == 'true' }}
        working-directory: ./backend
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        if: ${{ needs.path-check.outputs.pylint == 'true' }}
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install -r requirements.txt

      - name: Pylint
        if: ${{ needs.path-check.outputs.pylint == 'true' }}
        working-directory: ./backend
        run: |
          pylint $(git ls-files '*.py')
